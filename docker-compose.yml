version: '3.8'

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: qualcli
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: .
    ports:
      - "8002:8002"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/qualcli
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
      - ./builds:/app/builds
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  worker-high:
    build: .
    command: celery -A backend.queue.celery_app worker --queues=high_priority --loglevel=info --concurrency=4
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/qualcli
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
      - ./builds:/app/builds
    restart: unless-stopped

  worker-normal:
    build: .
    command: celery -A backend.queue.celery_app worker --queues=normal_priority --loglevel=info --concurrency=2
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/qualcli
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
      - ./builds:/app/builds
    restart: unless-stopped

  worker-low:
    build: .
    command: celery -A backend.queue.celery_app worker --queues=low_priority --loglevel=info --concurrency=1
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/qualcli
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
      - ./builds:/app/builds
    restart: unless-stopped

  flower:
    build: .
    command: celery -A backend.queue.celery_app flower --port=5555
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
    restart: unless-stopped

  init-db:
    build: .
    command: >
      sh -c "
        python scripts/init_db.py &&
        python scripts/init_devices.py
      "
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/qualcli
    depends_on:
      postgres:
        condition: service_healthy
    restart: "no"

volumes:
  postgres_data:
  redis_data: 